# Application TODO List
	[!] Fix the selection flashing speed
	[!] Implement OSX_WriteEntireFile
	[!] Implement OSX_OpenFile, OSX_AppendFile, and OSX_CloseFile
	[!] Implement OSX_CopyToClipboard and OSX_CopyFromClipboard
	[!] Implement PlatformConfig in OSX platform layer
	[?] Implement the rest of the python configuration options
	[ ] Create a packaging script in OSX to build the application bundle
	
	[ ] Add support for cursor setting on OSX platform layer
	[ ] Change the status message layout so it pops up as an overlay with formatted text rendering so the whole message always fits nicely
	[ ] Add a string data stack for all input lines to get added to
	[ ] Get rid of the UI Handler since we probably won't ever need movable/modular windows. Also function pointer remapping is stupid looking
	[ ] Add checking for COM port errors and whether or not we are still connected
	[ ] Paste from clipboard
	[ ] Option to enable timestamps and line color characters when saving to file
	[ ] Fade out the status message during the last second. (Requires more accurate timing information)
	[ ] Circular RX and TX LEDs
	[ ] Add a way to close the COM port
	[ ] Open saved file when saving text to file
	[ ] Custom regular expression effects, variable number of regular expressions
	[ ] Text cursor maintains when dragging out of text area
	[?] Cursor at end of file to indicate where typing will happen?
	[ ] Option to enable/disable auto-loading of output file dump
	[ ] Rewrite the way the configuration options are defined using the multiple #include technique
	[ ] Add better support for default configuration options that are simply overwritten by the user defined ones. Can we provide an example file or something? Maybe leave everything commented out and let them uncomment things?
	[?] Combine the configuration files into one file?
	[ ] Add a function that writes to a single option in the configuration file so we can have program written configuration options?
	[ ] Create the configuration files again if they are found to be missing on startup?
	[ ] Close running program instances when the application is exiting
	[ ] Save window position and size when closing to configuration options. Pass these to windows when we create the window at startup
	[ ] Rename LaunchFile to EditFile
	[ ] Fix the rendering of the assigned port name in the ComPortMenu. Possibly add the actual COM# below the assigned name?
	[ ] Fix rendering of hover line with new backgroundColor functionality
	[ ] Fix console window opening with python 2?
	[ ] Auto-reload configuration files when saved
	[ ] Keep old configuration options if new configuration file is unparsable (only on reload)
	[ ] Add an option to enable commands that can be sent from the python script and interpreted by ConstPort to provide extra functionality
	
	[X] Implement OSX_LaunchFile
	[X] Change the "Py" label to be the Python logo icon
	[X] Add an info window
	[X] Open a COM port, print the text to the command line
	[X] Make a function to get a list of available COM ports
	[X] Add a window with a list of COM ports that can be selected
	[X] Read text input and write it to the COM port
	[X] Text selection
	[X] Copy to clipboard
	[X] Add a AppReloaded function that gets called when the DLL is reloaded but not reset
	[X] Add an escape icon to windows
	[X] Fix scrollbar dissappear when grabbed on empty screen
	[X] Fix selection render order
	[X] Add a shortcut for showing full date time format on line number hover
	[X] Page Up, Page Down, End, and Home buttons works as expected
	[X] Add a mark to a line by clicking on line number or shortcut
	[X] Make The currently connected COM port show up in the title bar and status bar
	[X] Add a slide down menu with different buttons
	[X] Make sure the currently connected COM port shows up in the COM Menu
	[X] Expand the COM menu to include Baud Rate, Parity, Stop Bits, and Bit Count
	[X] Add software LEDs to indicate RX and TX
	[X] Clear buffer button
	[X] Horizontal Scrolling
	[X] Move line rendering parts into seperate file
	[X] Make a function that measures the whole buffer with ability to support word wrap and spacers
	[X] Add elapsed time spacers between lines
	[X] COM Ports above 12
	[X] Copy to file (static name)
	[X] Enter closes COM menu
	[X] Ctrl+# closes COM menu
	[X] Goto End Button below scrollbar
	[X] Fix line index calculation with banners
	[X] Fix a bug with the gradient shader not scaling correctly?
	[X] Load JSON file for settings
	[X] Implement the backspace button
	[x] Status bar messages from anywhere in the program
	[X] Regular Expression File
	[X] Regular Expression line matching
	[X] Add an output to file button that will start logging to a file rather than the console
	[X] Add a temporary MemoryArena type
	[X] Seperate Readable and File names for COM port
	[X] Open settings file from menu button
	[X] Naming of COM ports
	[X] Different colored backgrounds using regular expressions
	[X] Route input text to python script
	[X] Add configuration options to define what python script gets run by ConstPort
	[X] Handle escaped characters in JSON strings correctly
	[X] Seperate font for drawing data and font for drawing UI elements
	[X] Add a function to re-create the fonts. Recreate the fonts if the fontSizes change when reloading configuration options
	[X] Rename the global AppData_t* to app. Rename global PlatformInfo_t* to platform. Rename global AppInput_t* to input. Add global MemoryArena_t* called mainHeap.
	[-] Add a platform layer function to set the TempArena so we can add functions that push onto Temporary Memory when we call them NOTE: Probably will just pass memory arenas when arenas are needed, we can pass TempArena really easily if we want the function to allocate it on the temporary arena)
	[-] String manipulation functions using the TemporaryArena NOTE: Not many that I actually want :P Now a mylib file that has helpful string manipulation function might be nice
	[X] Ability to draw circles with the simpleShader

# Application Wish List
	[ ] Selection of spaces between markers
	[ ] Horizontal Scrollbar (only shows up if needed)
	[ ] Ability to set Flow Control mode
	[ ] Read multiple COM ports side by side.
	[ ] Little software LEDs to show flow control.
	[ ] Click on flow control to toggle CTS
	[X] Timestamps on each line. Hover over line number to show timestamp (Preferably with times difference formatting)
	[ ] Set up regular expressions to define color of each line
	[ ] Special characters for invalid ANSI characters
	[ ] Hex string mode
	[X] Capture to file. 
	[ ] Add an option to freeze output (read the COM port and throw away data)
	[ ] New Line Type option for input and output
	[X] Option to enable auto output echo
	[ ] Option to enable an input line that sends messages all at once (Hex or string)
	[ ] Command board with configurable command buttons
	[ ] Save configurations to a file and load on startup
	[ ] Try to auto-connect to last opened COM port on startup
	[ ] Automatically add marks to lines when a certain amount of time has passed between characters receives
	[?] Fix scrollbar so that it doesn't keep sliding when we have grabbed it
	[ ] Better way to detect open COM ports
	[ ] Search functionality
	[X] Call a python script when line is received or regular expression is matched
	[X] Add output of python script to buffer
	[ ] Changeable key mappings

# Platform Layer TODO List
	[X] Add a mouse start press and max distance since pressed to AppInput
	[X] Get the real time
	[X] Support older versions of OpenGL
	[X] Show a dialog box for startup errors
	[X] Load icon and use it in window creation
	[ ] Delete all OpenGL objects when we reset the application
	[ ] Close open COM ports when resetting application
	[ ] Move recent changes and reusable functions into a starter project for later use
	[ ] Save to file using Windows File Dialog
	[!] Fix app loading when the compilation takes longer. We need to detect whether the file is locked for reading I guess?
	[ ] 